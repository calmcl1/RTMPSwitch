<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="94">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="build">
      </df>
      <df name="include">
        <df name="getopt">
          <in>getopt.cpp</in>
          <in>getopt.h</in>
        </df>
        <df name="librtmp">
          <in>amf.c</in>
          <in>amf.h</in>
          <in>bytes.h</in>
          <in>dh.h</in>
          <in>dhgroups.h</in>
          <in>handshake.h</in>
          <in>hashswf.c</in>
          <in>http.h</in>
          <in>log.c</in>
          <in>log.h</in>
          <in>parseurl.c</in>
          <in>rtmp.c</in>
          <in>rtmp.h</in>
          <in>rtmp_sys.h</in>
        </df>
        <df name="live">
          <df name="BasicUsageEnvironment">
            <df name="include">
            </df>
            <in>BasicHashTable.cpp</in>
            <in>BasicTaskScheduler.cpp</in>
            <in>BasicTaskScheduler0.cpp</in>
            <in>BasicUsageEnvironment.cpp</in>
            <in>BasicUsageEnvironment0.cpp</in>
            <in>DelayQueue.cpp</in>
          </df>
          <df name="groupsock">
            <df name="include">
              <in>NetCommon.h</in>
            </df>
            <in>GroupEId.cpp</in>
            <in>Groupsock.cpp</in>
            <in>GroupsockHelper.cpp</in>
            <in>IOHandlers.cpp</in>
            <in>NetAddress.cpp</in>
            <in>NetInterface.cpp</in>
            <in>inet.c</in>
          </df>
          <df name="liveMedia">
            <df name="include">
            </df>
            <in>AC3AudioFileServerMediaSubsession.cpp</in>
            <in>AC3AudioRTPSink.cpp</in>
            <in>AC3AudioRTPSource.cpp</in>
            <in>AC3AudioStreamFramer.cpp</in>
            <in>ADTSAudioFileServerMediaSubsession.cpp</in>
            <in>ADTSAudioFileSource.cpp</in>
            <in>AMRAudioFileServerMediaSubsession.cpp</in>
            <in>AMRAudioFileSink.cpp</in>
            <in>AMRAudioFileSource.cpp</in>
            <in>AMRAudioRTPSink.cpp</in>
            <in>AMRAudioRTPSource.cpp</in>
            <in>AMRAudioSource.cpp</in>
            <in>AVIFileSink.cpp</in>
            <in>AudioInputDevice.cpp</in>
            <in>AudioRTPSink.cpp</in>
            <in>Base64.cpp</in>
            <in>BasicUDPSink.cpp</in>
            <in>BasicUDPSource.cpp</in>
            <in>BitVector.cpp</in>
            <in>ByteStreamFileSource.cpp</in>
            <in>ByteStreamMemoryBufferSource.cpp</in>
            <in>ByteStreamMultiFileSource.cpp</in>
            <in>DVVideoFileServerMediaSubsession.cpp</in>
            <in>DVVideoRTPSink.cpp</in>
            <in>DVVideoRTPSource.cpp</in>
            <in>DVVideoStreamFramer.cpp</in>
            <in>DarwinInjector.cpp</in>
            <in>DeviceSource.cpp</in>
            <in>DigestAuthentication.cpp</in>
            <in>EBMLNumber.cpp</in>
            <in>FileServerMediaSubsession.cpp</in>
            <in>FileSink.cpp</in>
            <in>FramedFileSource.cpp</in>
            <in>FramedFilter.cpp</in>
            <in>FramedSource.cpp</in>
            <in>GSMAudioRTPSink.cpp</in>
            <in>H261VideoRTPSource.cpp</in>
            <in>H263plusVideoFileServerMediaSubsession.cpp</in>
            <in>H263plusVideoRTPSink.cpp</in>
            <in>H263plusVideoRTPSource.cpp</in>
            <in>H263plusVideoStreamFramer.cpp</in>
            <in>H263plusVideoStreamParser.cpp</in>
            <in>H264VideoFileServerMediaSubsession.cpp</in>
            <in>H264VideoFileSink.cpp</in>
            <in>H264VideoRTPSink.cpp</in>
            <in>H264VideoRTPSource.cpp</in>
            <in>H264VideoStreamDiscreteFramer.cpp</in>
            <in>H264VideoStreamFramer.cpp</in>
            <in>H264or5VideoFileSink.cpp</in>
            <in>H264or5VideoRTPSink.cpp</in>
            <in>H264or5VideoStreamDiscreteFramer.cpp</in>
            <in>H264or5VideoStreamFramer.cpp</in>
            <in>H265VideoFileServerMediaSubsession.cpp</in>
            <in>H265VideoFileSink.cpp</in>
            <in>H265VideoRTPSink.cpp</in>
            <in>H265VideoRTPSource.cpp</in>
            <in>H265VideoStreamDiscreteFramer.cpp</in>
            <in>H265VideoStreamFramer.cpp</in>
            <in>InputFile.cpp</in>
            <in>JPEGVideoRTPSink.cpp</in>
            <in>JPEGVideoRTPSource.cpp</in>
            <in>JPEGVideoSource.cpp</in>
            <in>Locale.cpp</in>
            <in>MP3ADU.cpp</in>
            <in>MP3ADURTPSink.cpp</in>
            <in>MP3ADURTPSource.cpp</in>
            <in>MP3ADUTranscoder.cpp</in>
            <in>MP3ADUdescriptor.cpp</in>
            <in>MP3ADUinterleaving.cpp</in>
            <in>MP3AudioFileServerMediaSubsession.cpp</in>
            <in>MP3AudioMatroskaFileServerMediaSubsession.cpp</in>
            <in>MP3FileSource.cpp</in>
            <in>MP3Internals.cpp</in>
            <in>MP3InternalsHuffman.cpp</in>
            <in>MP3InternalsHuffmanTable.cpp</in>
            <in>MP3StreamState.cpp</in>
            <in>MP3Transcoder.cpp</in>
            <in>MPEG1or2AudioRTPSink.cpp</in>
            <in>MPEG1or2AudioRTPSource.cpp</in>
            <in>MPEG1or2AudioStreamFramer.cpp</in>
            <in>MPEG1or2Demux.cpp</in>
            <in>MPEG1or2DemuxedElementaryStream.cpp</in>
            <in>MPEG1or2DemuxedServerMediaSubsession.cpp</in>
            <in>MPEG1or2FileServerDemux.cpp</in>
            <in>MPEG1or2VideoFileServerMediaSubsession.cpp</in>
            <in>MPEG1or2VideoRTPSink.cpp</in>
            <in>MPEG1or2VideoRTPSource.cpp</in>
            <in>MPEG1or2VideoStreamDiscreteFramer.cpp</in>
            <in>MPEG1or2VideoStreamFramer.cpp</in>
            <in>MPEG2IndexFromTransportStream.cpp</in>
            <in>MPEG2TransportFileServerMediaSubsession.cpp</in>
            <in>MPEG2TransportStreamFramer.cpp</in>
            <in>MPEG2TransportStreamFromESSource.cpp</in>
            <in>MPEG2TransportStreamFromPESSource.cpp</in>
            <in>MPEG2TransportStreamIndexFile.cpp</in>
            <in>MPEG2TransportStreamMultiplexor.cpp</in>
            <in>MPEG2TransportStreamTrickModeFilter.cpp</in>
            <in>MPEG2TransportUDPServerMediaSubsession.cpp</in>
            <in>MPEG4ESVideoRTPSink.cpp</in>
            <in>MPEG4ESVideoRTPSource.cpp</in>
            <in>MPEG4GenericRTPSink.cpp</in>
            <in>MPEG4GenericRTPSource.cpp</in>
            <in>MPEG4LATMAudioRTPSink.cpp</in>
            <in>MPEG4LATMAudioRTPSource.cpp</in>
            <in>MPEG4VideoFileServerMediaSubsession.cpp</in>
            <in>MPEG4VideoStreamDiscreteFramer.cpp</in>
            <in>MPEG4VideoStreamFramer.cpp</in>
            <in>MPEGVideoStreamFramer.cpp</in>
            <in>MPEGVideoStreamParser.cpp</in>
            <in>MatroskaDemuxedTrack.cpp</in>
            <in>MatroskaFile.cpp</in>
            <in>MatroskaFileParser.cpp</in>
            <in>MatroskaFileServerDemux.cpp</in>
            <in>MatroskaFileServerMediaSubsession.cpp</in>
            <in>Media.cpp</in>
            <in>MediaSession.cpp</in>
            <in>MediaSink.cpp</in>
            <in>MediaSource.cpp</in>
            <in>MultiFramedRTPSink.cpp</in>
            <in>MultiFramedRTPSource.cpp</in>
            <in>OggDemuxedTrack.cpp</in>
            <in>OggFile.cpp</in>
            <in>OggFileParser.cpp</in>
            <in>OggFileServerDemux.cpp</in>
            <in>OggFileServerMediaSubsession.cpp</in>
            <in>OggFileSink.cpp</in>
            <in>OnDemandServerMediaSubsession.cpp</in>
            <in>OutputFile.cpp</in>
            <in>PassiveServerMediaSubsession.cpp</in>
            <in>ProxyServerMediaSession.cpp</in>
            <in>QCELPAudioRTPSource.cpp</in>
            <in>QuickTimeFileSink.cpp</in>
            <in>QuickTimeGenericRTPSource.cpp</in>
            <in>RTCP.cpp</in>
            <in>RTPInterface.cpp</in>
            <in>RTPSink.cpp</in>
            <in>RTPSource.cpp</in>
            <in>RTSPClient.cpp</in>
            <in>RTSPCommon.cpp</in>
            <in>RTSPRegisterSender.cpp</in>
            <in>RTSPServer.cpp</in>
            <in>RTSPServerSupportingHTTPStreaming.cpp</in>
            <in>SIPClient.cpp</in>
            <in>ServerMediaSession.cpp</in>
            <in>SimpleRTPSink.cpp</in>
            <in>SimpleRTPSource.cpp</in>
            <in>StreamParser.cpp</in>
            <in>StreamReplicator.cpp</in>
            <in>T140TextRTPSink.cpp</in>
            <in>TCPStreamSink.cpp</in>
            <in>TextRTPSink.cpp</in>
            <in>TheoraVideoRTPSink.cpp</in>
            <in>TheoraVideoRTPSource.cpp</in>
            <in>VP8VideoRTPSink.cpp</in>
            <in>VP8VideoRTPSource.cpp</in>
            <in>VideoRTPSink.cpp</in>
            <in>VorbisAudioRTPSink.cpp</in>
            <in>VorbisAudioRTPSource.cpp</in>
            <in>WAVAudioFileServerMediaSubsession.cpp</in>
            <in>WAVAudioFileSource.cpp</in>
            <in>ourMD5.cpp</in>
            <in>rtcp_from_spec.c</in>
            <in>rtcp_from_spec.h</in>
            <in>uLawAudioFilter.cpp</in>
          </df>
          <df name="mediaServer">
            <in>DynamicRTSPServer.cpp</in>
            <in>live555MediaServer.cpp</in>
          </df>
          <df name="proxyServer">
            <in>live555ProxyServer.cpp</in>
          </df>
          <df name="testProgs">
            <in>MPEG2TransportStreamIndexer.cpp</in>
            <in>openRTSP.cpp</in>
            <in>playCommon.cpp</in>
            <in>playSIP.cpp</in>
            <in>registerRTSPStream.cpp</in>
            <in>sapWatch.cpp</in>
            <in>testAMRAudioStreamer.cpp</in>
            <in>testDVVideoStreamer.cpp</in>
            <in>testGSMStreamer.cpp</in>
            <in>testH264VideoStreamer.cpp</in>
            <in>testH264VideoToTransportStream.cpp</in>
            <in>testH265VideoStreamer.cpp</in>
            <in>testH265VideoToTransportStream.cpp</in>
            <in>testMKVStreamer.cpp</in>
            <in>testMP3Receiver.cpp</in>
            <in>testMP3Streamer.cpp</in>
            <in>testMPEG1or2AudioVideoStreamer.cpp</in>
            <in>testMPEG1or2ProgramToTransportStream.cpp</in>
            <in>testMPEG1or2Splitter.cpp</in>
            <in>testMPEG1or2VideoReceiver.cpp</in>
            <in>testMPEG1or2VideoStreamer.cpp</in>
            <in>testMPEG2TransportReceiver.cpp</in>
            <in>testMPEG2TransportStreamTrickPlay.cpp</in>
            <in>testMPEG2TransportStreamer.cpp</in>
            <in>testMPEG4VideoStreamer.cpp</in>
            <in>testOggStreamer.cpp</in>
            <in>testOnDemandRTSPServer.cpp</in>
            <in>testRTSPClient.cpp</in>
            <in>testRelay.cpp</in>
            <in>testReplicator.cpp</in>
            <in>testWAVAudioStreamer.cpp</in>
            <in>vobStreamer.cpp</in>
          </df>
          <df name="UsageEnvironment">
            <df name="include">
            </df>
            <in>HashTable.cpp</in>
            <in>UsageEnvironment.cpp</in>
            <in>strDup.cpp</in>
          </df>
          <df name="WindowsAudioInputDevice">
            <in>WindowsAudioInputDevice_common.cpp</in>
            <in>WindowsAudioInputDevice_mixer.cpp</in>
            <in>WindowsAudioInputDevice_noMixer.cpp</in>
            <in>showAudioInputPorts.cpp</in>
          </df>
        </df>
        <df name="rtmpdump">
          <in>rtmpdump.c</in>
          <in>rtmpgw.c</in>
          <in>rtmpsrv.c</in>
          <in>rtmpsuck.c</in>
          <in>thread.c</in>
          <in>thread.h</in>
        </df>
        <df name="xgetopt">
          <in>About.cpp</in>
          <in>About.h</in>
          <in>Clipboard.cpp</in>
          <in>Clipboard.h</in>
          <in>HyperLink.cpp</in>
          <in>HyperLink.h</in>
          <in>StdAfx.cpp</in>
          <in>StdAfx.h</in>
          <in>XGetopt.cpp</in>
          <in>XGetopt.h</in>
          <in>XGetoptTest.cpp</in>
          <in>XGetoptTest.h</in>
          <in>XGetoptTestDlg.cpp</in>
          <in>XGetoptTestDlg.h</in>
          <in>XListBox.cpp</in>
          <in>XListBox.h</in>
          <in>argcargv.cpp</in>
          <in>argcargv.h</in>
          <in>resource.h</in>
        </df>
      </df>
      <df name="so">
      </df>
      <in>RTMPSwitch.cpp</in>
      <in>RTMPSwitch.h</in>
    </df>
    <itemPath>.travis.yml</itemPath>
  </logicalFolder>
  <projectmakefile>makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
          <variable name="GST_DEBUG" value="*:2"/>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
